{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Braggi",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#types"
        },
        {
            "include": "#entities"
        },
        {
            "include": "#quantum-keywords"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.braggi",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.braggi",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.braggi",
                    "match": "\\b(if|else|while|for|return|match|fn|let|const|region|entity|component|system|regime)\\b"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.braggi",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.braggi",
                    "match": "\\\\."
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.hex.braggi",
                    "match": "\\b0x[0-9a-fA-F]+\\b"
                },
                {
                    "name": "constant.numeric.decimal.braggi",
                    "match": "\\b\\d+(\\.\\d+)?\\b"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "entity.name.function.braggi",
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.other.braggi",
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.braggi",
                    "match": "\\+|\\-|\\*|\\/|\\=|\\<|\\>|\\!|\\&|\\||\\^|\\~|\\%"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.braggi",
                    "match": "\\b(i8|i16|i32|i64|u8|u16|u32|u64|f32|f64|bool|string|void)\\b"
                }
            ]
        },
        "entities": {
            "patterns": [
                {
                    "name": "entity.name.type.braggi",
                    "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
                }
            ]
        },
        "quantum-keywords": {
            "patterns": [
                {
                    "name": "keyword.other.quantum.braggi",
                    "match": "\\b(seed|propagate|collapse|constraint|restrict|world)\\b"
                }
            ]
        }
    },
    "scopeName": "source.braggi"
} 